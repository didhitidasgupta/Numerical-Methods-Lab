#include <stdio.h>
#include <math.h>
int main() {
    float a,b,r,i=0,N,E,app_root,error,fa,fb,fr;
    printf("enter two numbers: ");
    scanf("%f %f",&a,&b);
    fa=(a*a*a*a*a)-(64*a)+30;
    fb=(b*b*b*b*b)-(64*b)+30;
    error=fabs(a-b)/fabs(b);
    printf("enter the number of digits for approximation and the max no. of iterations: ");
    scanf("%f %f",&E,&N);
    while (error>E && i<=N)
    {
    r=b-((fb*(a-b))/(fa-fb));
     fr=(r*r*r*r*r)-(64*r)+30;
     a=b,fa=fb,b=r,fb=fr,app_root=r;
     i=i+1;
       error=fabs(a-b)/fabs(b);
    }
 printf("no. of iterations = %f\n",i);  
 if(i>N)
 {
     printf("ERROR: Root not found within iteration limit.\n");
 }
 else
 {
     printf("The approximate value of root is: %f",r);
 }
 return 0;
 }
