#include <stdio.h>
#include <math.h>

// Function f(x) = 1/x^2 - 10
float f(float x) {
    return (1 / (x * x)) - 10;
}

// Derivative f'(x) = -2/x^3
float fprime(float x) {
    return (-2) / (x * x * x);
}

int main() {
    float x0, E, x1, error;
    int i = 0, N;

    // User input
    printf("Enter initial guess: ");
    scanf("%f", &x0);
    printf("Enter tolerance limit: ");
    scanf("%f", &E);
    printf("Enter maximum iterations: ");
    scanf("%d", &N);

    do {
        x1 = x0 - f(x0) / fprime(x0); // Newton-Raphson formula
        error = fabs((x0 - x1)/x1);
        x0 = x1;
        i=i+1;
    } while (error > E && i < N);

    if (i == N) {
        printf("ERROR: Root not found within iteration limit.\n");
    } else {
        printf("Approximate value of 1/sqrt(10): %f\n", x1);
        printf("Number of iterations: %d\n", i);
    }

    return 0;
}
