#include <stdio.h>
#include <math.h>

float f(float x) {
    return pow(x,2)-10 ;
}

float fprime(float x) {
    return 2*x;
}

int main() {
   float x0, x1, fx, fpx, error, epsilon;
    int N, i = 0;

    printf("Enter initial guess: ");
    scanf("%f", &x0);

    printf("Enter tolerance (epsilon): ");
    scanf("%f", &epsilon);

    printf("Enter maximum iterations N: ");
    scanf("%d", &N);

    printf("\nIter\t x\t\t f(x)\t\t Error\n");

    do {
        fx = f(x0);
        fpx = fprime(x0);

        if (fabs(fpx) < 1e-8) 
  {
            printf("Derivative too small. Newton-Raphson may fail.\n");
            return 1;
        }

        x1 = x0 - fx/fpx;
        error = fabs((x1 - x0) / x1);

        printf("%d\t %.6lf\t %.6lf\t %.6lf\n", i+1, x1, f(x1), error);

        x0 = x1;
        i++;
    } while (error >= epsilon && i < N);

    if (error < epsilon) {
        printf("\nThe root is approximately: %.4f\n", x1);
    } else {
        printf("\nMethod did not converge within %d iterations.\n", N);
    }

    printf("Number of iterations: %d\n", i);
    return 0;
}
